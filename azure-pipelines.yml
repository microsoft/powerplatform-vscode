# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# https://aka.ms/yaml
#
# Official build to produce versioned and signed VSIX

variables:
  # https://aka.ms/gdn-injection
  GDN_CODESIGN_TARGETDIRECTORY: "$(Build.SourcesDirectory)\\package"
  # no codesigning for JavaScript:
  GDN_CODESIGN_EXCLUSIONS: "f|**/*.js"
  runCodesignValidationInjection: true
  breakCodesignValidationInjection: true

trigger:
  - release/*

# PR loops only via GH workflows
pr: none

pool:
  vmImage: 'windows-latest'

steps:
- task: NodeTool@0
  displayName: Select nodejs runtime
  inputs:
    versionSpec: '14.x'

- script: npm install
  displayName: 'Restore (npm install)'

- script: npm run dist
  displayName: 'Build and package VSIX'

# https://microsoft.sharepoint.com/teams/prss/esrp/info/ESRP%20Onboarding%20Wiki/Generating%20Signing%20JSON.aspx
# https://microsoft.sharepoint.com/teams/prss/esrp/info/ESRP%20Onboarding%20Wiki/Selecting%20CodeSign%20Certificates.aspx
- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP sign vsix packages'
  inputs:
    ConnectedServiceName: ESRPCodeSigningConnection
    FolderPath: 'package'
    Pattern: '*.vsix'
    signConfigType: inlineSignParams
    inlineOperation: |
      [
        {
          "KeyCode": "CP-233016",
          "OperationCode": "OpcSign",
          "Parameters": {
              "FileDigest": "/fd SHA256"
          },
          "ToolName": "sign",
          "ToolVersion": "1.0"
        },
        {
          "KeyCode": "CP-233016",
          "OperationCode": "OpcVerify",
          "Parameters": {},
          "ToolName": "sign",
          "ToolVersion": "1.0"
        }
      ]
    ServiceEndpointUrl: 'https://api.esrp.microsoft.com/api/v1'

- task: PublishBuildArtifacts@1
  displayName: 'Publish packages'
  condition: always()
  inputs:
    PathtoPublish: package
    ArtifactName: packages
